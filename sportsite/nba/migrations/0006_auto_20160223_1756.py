# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-23 17:56
from __future__ import unicode_literals

from django.db import migrations,models
import urllib2
from bs4 import BeautifulSoup
import datetime as dt

def populate_current_standings(apps, schema_editor):
    Standings = apps.get_model("nba", "Standings")
    Team = apps.get_model("nba", "Team")
    now = dt.datetime.now()

    url = 'http://espn.go.com/nba/standings'

    soup = BeautifulSoup(urllib2.urlopen(url).read())
    rows = soup.select('.standings-row')

    for row in rows:
        #initialize team array
        team = []

        row_soup = BeautifulSoup(str(row))

        #get team name
        team.append(row_soup.select('.team-names')[0].string)

        #get stats
        team_info = row_soup.find_all(style="white-space:no-wrap;")
        iter_team_info = iter(team_info)
        for info in iter_team_info:
            team.append(info.string)

        #store standings data
        date = now
        team_nickname = team[0].split(" ")[-1]
        wins = team[1]
        losses = team[2]
        pct = team[3]
        if team[4] == '-':
            gb = 0
        else:
            gb = team[4]
        home_wins = team[5].split('-')[0]
        home_losses = team[5].split('-')[1]
        road_wins = team[6].split('-')[0]
        road_losses = team[6].split('-')[1]
        division_wins = team[7].split('-')[0]
        division_losses = team[7].split('-')[1]
        conference_wins = team[8].split('-')[0]
        conference_losses = team[8].split('-')[1]
        ppg = team[9]
        opp_ppg = team[10]
        pt_diff = team[11]
        #string out the W/L from streak info
        if team[12][0] == "L":
            win_streak = "-" + team[12][1:]
        else:
            win_streak = team[12][1:]
        last_10_wins = team[13].split('-')[0]
        last_10_losses = team[13].split('-')[1]

        #save standing
        standing = Standings(date=date, team = Team.objects.get(nickname=team_nickname),
        wins=wins, losses=losses, pct=pct, gb=gb, home_wins=home_wins,
        home_losses=home_losses, road_wins=road_wins, road_losses=road_losses,
        division_wins=division_wins, division_losses=division_losses,
        conference_wins=conference_wins,conference_losses=conference_losses,
        ppg=ppg, opp_ppg=opp_ppg, pt_diff=pt_diff, win_streak=win_streak,
        last_10_wins=last_10_wins, last_10_losses=last_10_losses)
        standing.save()

class Migration(migrations.Migration):

    dependencies = [
        ('nba', '0005_auto_20160223_1755'),
    ]

    operations = [
        migrations.RunPython(populate_current_standings),
    ]
